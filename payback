#!/usr/bin/perl -w
use strict;

my $DEBUG = 1;
my ($linetotal, @items1, @items2, %owe_to_pot, %paid_to_pot,
    $equal_share_payors, %participants);

sub DEBUG (@) { print STDOUT "@_\n" if $DEBUG; }

while (<>) {
  print if /^#/;
  s/#.*//; next if /^\s*$/;
  # A line looks like:
  # "Owe: Alice Bob(20.00) Chris Donna       Paid: Alice(50.00) Bob(20.00)"
  /Owe:(.*)Paid:(.*)/ or
    die "ERROR: Line $. not of the form 'Owe: ...  Paid: ...'\n";
  @items1 = split ' ', $1; @items2 = split ' ', $2;

  $linetotal=0; $equal_share_payors=0;
  foreach $_ (@items2) {
    # "Paid: Alice(50.00) Bob(20.00)"
    s/,$//;
    /^(\S+)\((.*?)\)$/ or
      die "ERROR: Line $. payor '$_' should be 'Payor(amount)'\n";
    DEBUG "Line $.: $1 paid $2";
    $paid_to_pot{$1} += $2;
    $linetotal += $2;
    $participants{$1} = 1;
  }
  DEBUG "Line $.: Total paid is $linetotal";

  # First, if amounts owed are specified inline, debit and subtract from
  # the total.
  foreach $_ (@items1) {
    # "Owe: Alice, Bob(20.00), Chris, Donna"
    s/,$//;
    /^(\w+?)(\((.*?)\))?$/ or
      die "ERROR: Line $. Attendee '$_' should be 'Attendee[(amount)]'\n";
    if (defined $2) {
      $owe_to_pot{$1} += $3;
      DEBUG "Line $.: $1 owes $3 (specified on line)";
      $linetotal -= $3;
      $participants{$1} = 1;
    } else {
      ++$equal_share_payors;
    }
  }

  # Now, everyone left owes an equal share
  DEBUG "Line $.: Cost to be divided equally: $linetotal";
  my $owed = $linetotal / $equal_share_payors;
  foreach $_ (@items1) {
    # "Owe: Alice, Bob(20.00), Chris, Donna"
    s/,$//;
    /^(\w+)(\((.*?)\))?$/ or
      die "ERROR: Line $. Attendee '$_' should be 'Attendee[(amount)]'\n";
    if (not defined $2) {
      $owe_to_pot{$1} += $owed;
      DEBUG "Line $.: $1 owes ", sprintf("%.3f",$owed), " (equal share)";
      $participants{$1} = 1;
    }
  }
}

foreach $_ (sort keys %participants) {
  my ($paid, $owe) = ($paid_to_pot{$_}, $owe_to_pot{$_});
  $paid = 0 if not defined $paid;
  $owe = 0 if not defined $owe;
  printf "%10s: total paid = %6.2f, total owed = %6.2f, balance = %6.2f\n",
    $_, $paid, $owe, $paid-$owe;
}
